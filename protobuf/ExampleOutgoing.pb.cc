// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protobuf/ExampleOutgoing.proto
// Protobuf C++ Version: 5.28.3

#include "protobuf/ExampleOutgoing.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Vector3D::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector3D::Vector3D(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vector3DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vector3DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vector3DDefaultTypeInternal() {}
  union {
    Vector3D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vector3DDefaultTypeInternal _Vector3D_default_instance_;

inline constexpr Transform::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        rotation_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Transform::Transform(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformDefaultTypeInternal() {}
  union {
    Transform _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformDefaultTypeInternal _Transform_default_instance_;

inline constexpr VehicleOutgoing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        acceleration_{nullptr},
        angularvelocity_{nullptr},
        transform_{nullptr},
        velocity_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VehicleOutgoing::VehicleOutgoing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VehicleOutgoingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleOutgoingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleOutgoingDefaultTypeInternal() {}
  union {
    VehicleOutgoing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleOutgoingDefaultTypeInternal _VehicleOutgoing_default_instance_;

inline constexpr Outgoing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vehicles_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Outgoing::Outgoing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OutgoingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OutgoingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OutgoingDefaultTypeInternal() {}
  union {
    Outgoing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OutgoingDefaultTypeInternal _Outgoing_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protobuf_2fExampleOutgoing_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protobuf_2fExampleOutgoing_2eproto = nullptr;
const ::uint32_t
    TableStruct_protobuf_2fExampleOutgoing_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Vector3D, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Vector3D, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Vector3D, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Vector3D, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::Transform, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Transform, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Transform, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::Transform, _impl_.rotation_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::VehicleOutgoing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::VehicleOutgoing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::VehicleOutgoing, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::VehicleOutgoing, _impl_.acceleration_),
        PROTOBUF_FIELD_OFFSET(::VehicleOutgoing, _impl_.angularvelocity_),
        PROTOBUF_FIELD_OFFSET(::VehicleOutgoing, _impl_.transform_),
        PROTOBUF_FIELD_OFFSET(::VehicleOutgoing, _impl_.velocity_),
        ~0u,
        0,
        1,
        2,
        3,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Outgoing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Outgoing, _impl_.vehicles_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Vector3D)},
        {11, 21, -1, sizeof(::Transform)},
        {23, 36, -1, sizeof(::VehicleOutgoing)},
        {41, -1, -1, sizeof(::Outgoing)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Vector3D_default_instance_._instance,
    &::_Transform_default_instance_._instance,
    &::_VehicleOutgoing_default_instance_._instance,
    &::_Outgoing_default_instance_._instance,
};
const char descriptor_table_protodef_protobuf_2fExampleOutgoing_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\036protobuf/ExampleOutgoing.proto\"+\n\010Vect"
    "or3D\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"E\n"
    "\tTransform\022\033\n\010position\030\001 \001(\0132\t.Vector3D\022"
    "\033\n\010rotation\030\002 \001(\0132\t.Vector3D\"\240\001\n\017Vehicle"
    "Outgoing\022\014\n\004name\030\001 \001(\t\022\037\n\014acceleration\030\002"
    " \001(\0132\t.Vector3D\022\"\n\017angularVelocity\030\003 \001(\013"
    "2\t.Vector3D\022\035\n\ttransform\030\004 \001(\0132\n.Transfo"
    "rm\022\033\n\010velocity\030\005 \001(\0132\t.Vector3D\".\n\010Outgo"
    "ing\022\"\n\010vehicles\030\001 \003(\0132\020.VehicleOutgoingb"
    "\006proto3"
};
static ::absl::once_flag descriptor_table_protobuf_2fExampleOutgoing_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_protobuf_2fExampleOutgoing_2eproto = {
    false,
    false,
    367,
    descriptor_table_protodef_protobuf_2fExampleOutgoing_2eproto,
    "protobuf/ExampleOutgoing.proto",
    &descriptor_table_protobuf_2fExampleOutgoing_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_protobuf_2fExampleOutgoing_2eproto::offsets,
    file_level_enum_descriptors_protobuf_2fExampleOutgoing_2eproto,
    file_level_service_descriptors_protobuf_2fExampleOutgoing_2eproto,
};
// ===================================================================

class Vector3D::_Internal {
 public:
};

Vector3D::Vector3D(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Vector3D)
}
Vector3D::Vector3D(
    ::google::protobuf::Arena* arena, const Vector3D& from)
    : Vector3D(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vector3D::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vector3D::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vector3D::~Vector3D() {
  // @@protoc_insertion_point(destructor:Vector3D)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vector3D::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Vector3D::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Vector3D_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Vector3D::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Vector3D>(),
            ::google::protobuf::Message::GetNewImpl<Vector3D>(),
            ::google::protobuf::Message::GetClearImpl<Vector3D>(), &Vector3D::ByteSizeLong,
                &Vector3D::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Vector3D, _impl_._cached_size_),
            false,
        },
        &Vector3D::kDescriptorMethods,
        &descriptor_table_protobuf_2fExampleOutgoing_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Vector3D::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Vector3D::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Vector3D>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vector3D::Clear() {
// @@protoc_insertion_point(message_clear_start:Vector3D)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vector3D::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vector3D& this_ = static_cast<const Vector3D&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vector3D::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vector3D& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Vector3D)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float x = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x(), target);
          }

          // float y = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y(), target);
          }

          // float z = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Vector3D)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vector3D::ByteSizeLong(const MessageLite& base) {
          const Vector3D& this_ = static_cast<const Vector3D&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vector3D::ByteSizeLong() const {
          const Vector3D& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Vector3D)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float x = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float z = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vector3D::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vector3D*>(&to_msg);
  auto& from = static_cast<const Vector3D&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Vector3D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector3D::CopyFrom(const Vector3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Vector3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vector3D::InternalSwap(Vector3D* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.z_)
      + sizeof(Vector3D::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vector3D, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vector3D::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Transform::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Transform>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Transform, _impl_._has_bits_);
};

Transform::Transform(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Transform)
}
inline PROTOBUF_NDEBUG_INLINE Transform::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Transform& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Transform::Transform(
    ::google::protobuf::Arena* arena,
    const Transform& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Transform* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Vector3D>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.rotation_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::Vector3D>(
                              arena, *from._impl_.rotation_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:Transform)
}
inline PROTOBUF_NDEBUG_INLINE Transform::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Transform::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, rotation_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::rotation_));
}
Transform::~Transform() {
  // @@protoc_insertion_point(destructor:Transform)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Transform::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_;
  delete _impl_.rotation_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Transform::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Transform_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Transform::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Transform>(),
            ::google::protobuf::Message::GetNewImpl<Transform>(),
            ::google::protobuf::Message::GetClearImpl<Transform>(), &Transform::ByteSizeLong,
                &Transform::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Transform, _impl_._cached_size_),
            false,
        },
        &Transform::kDescriptorMethods,
        &descriptor_table_protobuf_2fExampleOutgoing_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Transform::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Transform::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Transform, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Transform>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Vector3D rotation = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Transform, _impl_.rotation_)}},
    // .Vector3D position = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Transform, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Vector3D position = 1;
    {PROTOBUF_FIELD_OFFSET(Transform, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Vector3D rotation = 2;
    {PROTOBUF_FIELD_OFFSET(Transform, _impl_.rotation_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Vector3D>()},
    {::_pbi::TcParser::GetTable<::Vector3D>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Transform::Clear() {
// @@protoc_insertion_point(message_clear_start:Transform)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rotation_ != nullptr);
      _impl_.rotation_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Transform::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Transform& this_ = static_cast<const Transform&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Transform::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Transform& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Transform)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .Vector3D position = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
                stream);
          }

          // .Vector3D rotation = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.rotation_, this_._impl_.rotation_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Transform)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Transform::ByteSizeLong(const MessageLite& base) {
          const Transform& this_ = static_cast<const Transform&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Transform::ByteSizeLong() const {
          const Transform& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Transform)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .Vector3D position = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
            }
            // .Vector3D rotation = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotation_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Transform::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Transform*>(&to_msg);
  auto& from = static_cast<const Transform&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Transform)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::Vector3D>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.rotation_ != nullptr);
      if (_this->_impl_.rotation_ == nullptr) {
        _this->_impl_.rotation_ =
            ::google::protobuf::Message::CopyConstruct<::Vector3D>(arena, *from._impl_.rotation_);
      } else {
        _this->_impl_.rotation_->MergeFrom(*from._impl_.rotation_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Transform::CopyFrom(const Transform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Transform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Transform::InternalSwap(Transform* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Transform, _impl_.rotation_)
      + sizeof(Transform::_impl_.rotation_)
      - PROTOBUF_FIELD_OFFSET(Transform, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata Transform::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VehicleOutgoing::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VehicleOutgoing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_._has_bits_);
};

VehicleOutgoing::VehicleOutgoing(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:VehicleOutgoing)
}
inline PROTOBUF_NDEBUG_INLINE VehicleOutgoing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::VehicleOutgoing& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

VehicleOutgoing::VehicleOutgoing(
    ::google::protobuf::Arena* arena,
    const VehicleOutgoing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VehicleOutgoing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.acceleration_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Vector3D>(
                              arena, *from._impl_.acceleration_)
                        : nullptr;
  _impl_.angularvelocity_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::Vector3D>(
                              arena, *from._impl_.angularvelocity_)
                        : nullptr;
  _impl_.transform_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::Transform>(
                              arena, *from._impl_.transform_)
                        : nullptr;
  _impl_.velocity_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::Vector3D>(
                              arena, *from._impl_.velocity_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:VehicleOutgoing)
}
inline PROTOBUF_NDEBUG_INLINE VehicleOutgoing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void VehicleOutgoing::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, acceleration_),
           0,
           offsetof(Impl_, velocity_) -
               offsetof(Impl_, acceleration_) +
               sizeof(Impl_::velocity_));
}
VehicleOutgoing::~VehicleOutgoing() {
  // @@protoc_insertion_point(destructor:VehicleOutgoing)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleOutgoing::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  delete _impl_.acceleration_;
  delete _impl_.angularvelocity_;
  delete _impl_.transform_;
  delete _impl_.velocity_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    VehicleOutgoing::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_VehicleOutgoing_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &VehicleOutgoing::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<VehicleOutgoing>(),
            ::google::protobuf::Message::GetNewImpl<VehicleOutgoing>(),
            ::google::protobuf::Message::GetClearImpl<VehicleOutgoing>(), &VehicleOutgoing::ByteSizeLong,
                &VehicleOutgoing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_._cached_size_),
            false,
        },
        &VehicleOutgoing::kDescriptorMethods,
        &descriptor_table_protobuf_2fExampleOutgoing_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* VehicleOutgoing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 28, 2> VehicleOutgoing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::VehicleOutgoing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.name_)}},
    // .Vector3D acceleration = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.acceleration_)}},
    // .Vector3D angularVelocity = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.angularvelocity_)}},
    // .Transform transform = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.transform_)}},
    // .Vector3D velocity = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.velocity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Vector3D acceleration = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.acceleration_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Vector3D angularVelocity = 3;
    {PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.angularvelocity_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Transform transform = 4;
    {PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.transform_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Vector3D velocity = 5;
    {PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.velocity_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Vector3D>()},
    {::_pbi::TcParser::GetTable<::Vector3D>()},
    {::_pbi::TcParser::GetTable<::Transform>()},
    {::_pbi::TcParser::GetTable<::Vector3D>()},
  }}, {{
    "\17\4\0\0\0\0\0\0"
    "VehicleOutgoing"
    "name"
  }},
};

PROTOBUF_NOINLINE void VehicleOutgoing::Clear() {
// @@protoc_insertion_point(message_clear_start:VehicleOutgoing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.acceleration_ != nullptr);
      _impl_.acceleration_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.angularvelocity_ != nullptr);
      _impl_.angularvelocity_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.transform_ != nullptr);
      _impl_.transform_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.velocity_ != nullptr);
      _impl_.velocity_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VehicleOutgoing::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VehicleOutgoing& this_ = static_cast<const VehicleOutgoing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VehicleOutgoing::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VehicleOutgoing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:VehicleOutgoing)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "VehicleOutgoing.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .Vector3D acceleration = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.acceleration_, this_._impl_.acceleration_->GetCachedSize(), target,
                stream);
          }

          // .Vector3D angularVelocity = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.angularvelocity_, this_._impl_.angularvelocity_->GetCachedSize(), target,
                stream);
          }

          // .Transform transform = 4;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.transform_, this_._impl_.transform_->GetCachedSize(), target,
                stream);
          }

          // .Vector3D velocity = 5;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.velocity_, this_._impl_.velocity_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:VehicleOutgoing)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VehicleOutgoing::ByteSizeLong(const MessageLite& base) {
          const VehicleOutgoing& this_ = static_cast<const VehicleOutgoing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VehicleOutgoing::ByteSizeLong() const {
          const VehicleOutgoing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:VehicleOutgoing)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .Vector3D acceleration = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.acceleration_);
            }
            // .Vector3D angularVelocity = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.angularvelocity_);
            }
            // .Transform transform = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.transform_);
            }
            // .Vector3D velocity = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.velocity_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VehicleOutgoing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VehicleOutgoing*>(&to_msg);
  auto& from = static_cast<const VehicleOutgoing&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:VehicleOutgoing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.acceleration_ != nullptr);
      if (_this->_impl_.acceleration_ == nullptr) {
        _this->_impl_.acceleration_ =
            ::google::protobuf::Message::CopyConstruct<::Vector3D>(arena, *from._impl_.acceleration_);
      } else {
        _this->_impl_.acceleration_->MergeFrom(*from._impl_.acceleration_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.angularvelocity_ != nullptr);
      if (_this->_impl_.angularvelocity_ == nullptr) {
        _this->_impl_.angularvelocity_ =
            ::google::protobuf::Message::CopyConstruct<::Vector3D>(arena, *from._impl_.angularvelocity_);
      } else {
        _this->_impl_.angularvelocity_->MergeFrom(*from._impl_.angularvelocity_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.transform_ != nullptr);
      if (_this->_impl_.transform_ == nullptr) {
        _this->_impl_.transform_ =
            ::google::protobuf::Message::CopyConstruct<::Transform>(arena, *from._impl_.transform_);
      } else {
        _this->_impl_.transform_->MergeFrom(*from._impl_.transform_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.velocity_ != nullptr);
      if (_this->_impl_.velocity_ == nullptr) {
        _this->_impl_.velocity_ =
            ::google::protobuf::Message::CopyConstruct<::Vector3D>(arena, *from._impl_.velocity_);
      } else {
        _this->_impl_.velocity_->MergeFrom(*from._impl_.velocity_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleOutgoing::CopyFrom(const VehicleOutgoing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VehicleOutgoing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VehicleOutgoing::InternalSwap(VehicleOutgoing* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.velocity_)
      + sizeof(VehicleOutgoing::_impl_.velocity_)
      - PROTOBUF_FIELD_OFFSET(VehicleOutgoing, _impl_.acceleration_)>(
          reinterpret_cast<char*>(&_impl_.acceleration_),
          reinterpret_cast<char*>(&other->_impl_.acceleration_));
}

::google::protobuf::Metadata VehicleOutgoing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Outgoing::_Internal {
 public:
};

Outgoing::Outgoing(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Outgoing)
}
inline PROTOBUF_NDEBUG_INLINE Outgoing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Outgoing& from_msg)
      : vehicles_{visibility, arena, from.vehicles_},
        _cached_size_{0} {}

Outgoing::Outgoing(
    ::google::protobuf::Arena* arena,
    const Outgoing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Outgoing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Outgoing)
}
inline PROTOBUF_NDEBUG_INLINE Outgoing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : vehicles_{visibility, arena},
        _cached_size_{0} {}

inline void Outgoing::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Outgoing::~Outgoing() {
  // @@protoc_insertion_point(destructor:Outgoing)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Outgoing::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Outgoing::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Outgoing_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Outgoing::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Outgoing>(),
            ::google::protobuf::Message::GetNewImpl<Outgoing>(),
            ::google::protobuf::Message::GetClearImpl<Outgoing>(), &Outgoing::ByteSizeLong,
                &Outgoing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Outgoing, _impl_._cached_size_),
            false,
        },
        &Outgoing::kDescriptorMethods,
        &descriptor_table_protobuf_2fExampleOutgoing_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Outgoing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Outgoing::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Outgoing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .VehicleOutgoing vehicles = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Outgoing, _impl_.vehicles_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .VehicleOutgoing vehicles = 1;
    {PROTOBUF_FIELD_OFFSET(Outgoing, _impl_.vehicles_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::VehicleOutgoing>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Outgoing::Clear() {
// @@protoc_insertion_point(message_clear_start:Outgoing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vehicles_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Outgoing::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Outgoing& this_ = static_cast<const Outgoing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Outgoing::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Outgoing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Outgoing)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .VehicleOutgoing vehicles = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_vehicles_size());
               i < n; i++) {
            const auto& repfield = this_._internal_vehicles().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Outgoing)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Outgoing::ByteSizeLong(const MessageLite& base) {
          const Outgoing& this_ = static_cast<const Outgoing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Outgoing::ByteSizeLong() const {
          const Outgoing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Outgoing)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .VehicleOutgoing vehicles = 1;
             {
              total_size += 1UL * this_._internal_vehicles_size();
              for (const auto& msg : this_._internal_vehicles()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Outgoing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Outgoing*>(&to_msg);
  auto& from = static_cast<const Outgoing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Outgoing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vehicles()->MergeFrom(
      from._internal_vehicles());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Outgoing::CopyFrom(const Outgoing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Outgoing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Outgoing::InternalSwap(Outgoing* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.vehicles_.InternalSwap(&other->_impl_.vehicles_);
}

::google::protobuf::Metadata Outgoing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_protobuf_2fExampleOutgoing_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
