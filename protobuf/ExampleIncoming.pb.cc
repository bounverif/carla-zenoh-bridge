// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protobuf/ExampleIncoming.proto
// Protobuf C++ Version: 5.28.3

#include "protobuf/ExampleIncoming.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr VehicleIncoming::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        throttle_{0},
        brake_{0},
        steer_{0},
        gear_{0},
        handbrake_{false},
        reverse_{false},
        manual_gear_shift_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VehicleIncoming::VehicleIncoming(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VehicleIncomingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleIncomingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleIncomingDefaultTypeInternal() {}
  union {
    VehicleIncoming _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleIncomingDefaultTypeInternal _VehicleIncoming_default_instance_;

inline constexpr Incoming::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vehicles_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Incoming::Incoming(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IncomingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IncomingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IncomingDefaultTypeInternal() {}
  union {
    Incoming _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IncomingDefaultTypeInternal _Incoming_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protobuf_2fExampleIncoming_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protobuf_2fExampleIncoming_2eproto = nullptr;
const ::uint32_t
    TableStruct_protobuf_2fExampleIncoming_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::VehicleIncoming, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::VehicleIncoming, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::VehicleIncoming, _impl_.throttle_),
        PROTOBUF_FIELD_OFFSET(::VehicleIncoming, _impl_.brake_),
        PROTOBUF_FIELD_OFFSET(::VehicleIncoming, _impl_.steer_),
        PROTOBUF_FIELD_OFFSET(::VehicleIncoming, _impl_.gear_),
        PROTOBUF_FIELD_OFFSET(::VehicleIncoming, _impl_.handbrake_),
        PROTOBUF_FIELD_OFFSET(::VehicleIncoming, _impl_.reverse_),
        PROTOBUF_FIELD_OFFSET(::VehicleIncoming, _impl_.manual_gear_shift_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Incoming, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Incoming, _impl_.vehicles_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::VehicleIncoming)},
        {16, -1, -1, sizeof(::Incoming)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_VehicleIncoming_default_instance_._instance,
    &::_Incoming_default_instance_._instance,
};
const char descriptor_table_protodef_protobuf_2fExampleIncoming_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\036protobuf/ExampleIncoming.proto\"\234\001\n\017Veh"
    "icleIncoming\022\014\n\004name\030\001 \001(\t\022\020\n\010throttle\030\002"
    " \001(\002\022\r\n\005brake\030\003 \001(\002\022\r\n\005steer\030\004 \001(\002\022\014\n\004ge"
    "ar\030\005 \001(\005\022\021\n\thandbrake\030\006 \001(\010\022\017\n\007reverse\030\007"
    " \001(\010\022\031\n\021manual_gear_shift\030\010 \001(\010\".\n\010Incom"
    "ing\022\"\n\010vehicles\030\001 \003(\0132\020.VehicleIncomingb"
    "\006proto3"
};
static ::absl::once_flag descriptor_table_protobuf_2fExampleIncoming_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_protobuf_2fExampleIncoming_2eproto = {
    false,
    false,
    247,
    descriptor_table_protodef_protobuf_2fExampleIncoming_2eproto,
    "protobuf/ExampleIncoming.proto",
    &descriptor_table_protobuf_2fExampleIncoming_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_protobuf_2fExampleIncoming_2eproto::offsets,
    file_level_enum_descriptors_protobuf_2fExampleIncoming_2eproto,
    file_level_service_descriptors_protobuf_2fExampleIncoming_2eproto,
};
// ===================================================================

class VehicleIncoming::_Internal {
 public:
};

VehicleIncoming::VehicleIncoming(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:VehicleIncoming)
}
inline PROTOBUF_NDEBUG_INLINE VehicleIncoming::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::VehicleIncoming& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

VehicleIncoming::VehicleIncoming(
    ::google::protobuf::Arena* arena,
    const VehicleIncoming& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VehicleIncoming* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, throttle_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, throttle_),
           offsetof(Impl_, manual_gear_shift_) -
               offsetof(Impl_, throttle_) +
               sizeof(Impl_::manual_gear_shift_));

  // @@protoc_insertion_point(copy_constructor:VehicleIncoming)
}
inline PROTOBUF_NDEBUG_INLINE VehicleIncoming::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void VehicleIncoming::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, throttle_),
           0,
           offsetof(Impl_, manual_gear_shift_) -
               offsetof(Impl_, throttle_) +
               sizeof(Impl_::manual_gear_shift_));
}
VehicleIncoming::~VehicleIncoming() {
  // @@protoc_insertion_point(destructor:VehicleIncoming)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleIncoming::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    VehicleIncoming::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_VehicleIncoming_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &VehicleIncoming::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<VehicleIncoming>(),
            ::google::protobuf::Message::GetNewImpl<VehicleIncoming>(),
            ::google::protobuf::Message::GetClearImpl<VehicleIncoming>(), &VehicleIncoming::ByteSizeLong,
                &VehicleIncoming::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_._cached_size_),
            false,
        },
        &VehicleIncoming::kDescriptorMethods,
        &descriptor_table_protobuf_2fExampleIncoming_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* VehicleIncoming::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 36, 2> VehicleIncoming::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::VehicleIncoming>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool manual_gear_shift = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VehicleIncoming, _impl_.manual_gear_shift_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.manual_gear_shift_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.name_)}},
    // float throttle = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.throttle_)}},
    // float brake = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.brake_)}},
    // float steer = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.steer_)}},
    // int32 gear = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VehicleIncoming, _impl_.gear_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.gear_)}},
    // bool handbrake = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VehicleIncoming, _impl_.handbrake_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.handbrake_)}},
    // bool reverse = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VehicleIncoming, _impl_.reverse_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.reverse_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float throttle = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.throttle_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float brake = 3;
    {PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.brake_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float steer = 4;
    {PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.steer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 gear = 5;
    {PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.gear_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool handbrake = 6;
    {PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.handbrake_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool reverse = 7;
    {PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.reverse_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool manual_gear_shift = 8;
    {PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.manual_gear_shift_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\17\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "VehicleIncoming"
    "name"
  }},
};

PROTOBUF_NOINLINE void VehicleIncoming::Clear() {
// @@protoc_insertion_point(message_clear_start:VehicleIncoming)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.throttle_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.manual_gear_shift_) -
      reinterpret_cast<char*>(&_impl_.throttle_)) + sizeof(_impl_.manual_gear_shift_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VehicleIncoming::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VehicleIncoming& this_ = static_cast<const VehicleIncoming&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VehicleIncoming::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VehicleIncoming& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:VehicleIncoming)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "VehicleIncoming.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // float throttle = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_throttle()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_throttle(), target);
          }

          // float brake = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_brake()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_brake(), target);
          }

          // float steer = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_steer()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_steer(), target);
          }

          // int32 gear = 5;
          if (this_._internal_gear() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_gear(), target);
          }

          // bool handbrake = 6;
          if (this_._internal_handbrake() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_handbrake(), target);
          }

          // bool reverse = 7;
          if (this_._internal_reverse() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_reverse(), target);
          }

          // bool manual_gear_shift = 8;
          if (this_._internal_manual_gear_shift() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_manual_gear_shift(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:VehicleIncoming)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VehicleIncoming::ByteSizeLong(const MessageLite& base) {
          const VehicleIncoming& this_ = static_cast<const VehicleIncoming&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VehicleIncoming::ByteSizeLong() const {
          const VehicleIncoming& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:VehicleIncoming)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // float throttle = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_throttle()) != 0) {
              total_size += 5;
            }
            // float brake = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_brake()) != 0) {
              total_size += 5;
            }
            // float steer = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_steer()) != 0) {
              total_size += 5;
            }
            // int32 gear = 5;
            if (this_._internal_gear() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_gear());
            }
            // bool handbrake = 6;
            if (this_._internal_handbrake() != 0) {
              total_size += 2;
            }
            // bool reverse = 7;
            if (this_._internal_reverse() != 0) {
              total_size += 2;
            }
            // bool manual_gear_shift = 8;
            if (this_._internal_manual_gear_shift() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VehicleIncoming::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VehicleIncoming*>(&to_msg);
  auto& from = static_cast<const VehicleIncoming&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:VehicleIncoming)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_throttle()) != 0) {
    _this->_impl_.throttle_ = from._impl_.throttle_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_brake()) != 0) {
    _this->_impl_.brake_ = from._impl_.brake_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_steer()) != 0) {
    _this->_impl_.steer_ = from._impl_.steer_;
  }
  if (from._internal_gear() != 0) {
    _this->_impl_.gear_ = from._impl_.gear_;
  }
  if (from._internal_handbrake() != 0) {
    _this->_impl_.handbrake_ = from._impl_.handbrake_;
  }
  if (from._internal_reverse() != 0) {
    _this->_impl_.reverse_ = from._impl_.reverse_;
  }
  if (from._internal_manual_gear_shift() != 0) {
    _this->_impl_.manual_gear_shift_ = from._impl_.manual_gear_shift_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleIncoming::CopyFrom(const VehicleIncoming& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VehicleIncoming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VehicleIncoming::InternalSwap(VehicleIncoming* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.manual_gear_shift_)
      + sizeof(VehicleIncoming::_impl_.manual_gear_shift_)
      - PROTOBUF_FIELD_OFFSET(VehicleIncoming, _impl_.throttle_)>(
          reinterpret_cast<char*>(&_impl_.throttle_),
          reinterpret_cast<char*>(&other->_impl_.throttle_));
}

::google::protobuf::Metadata VehicleIncoming::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Incoming::_Internal {
 public:
};

Incoming::Incoming(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Incoming)
}
inline PROTOBUF_NDEBUG_INLINE Incoming::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Incoming& from_msg)
      : vehicles_{visibility, arena, from.vehicles_},
        _cached_size_{0} {}

Incoming::Incoming(
    ::google::protobuf::Arena* arena,
    const Incoming& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Incoming* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Incoming)
}
inline PROTOBUF_NDEBUG_INLINE Incoming::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : vehicles_{visibility, arena},
        _cached_size_{0} {}

inline void Incoming::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Incoming::~Incoming() {
  // @@protoc_insertion_point(destructor:Incoming)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Incoming::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Incoming::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Incoming_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Incoming::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Incoming>(),
            ::google::protobuf::Message::GetNewImpl<Incoming>(),
            ::google::protobuf::Message::GetClearImpl<Incoming>(), &Incoming::ByteSizeLong,
                &Incoming::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Incoming, _impl_._cached_size_),
            false,
        },
        &Incoming::kDescriptorMethods,
        &descriptor_table_protobuf_2fExampleIncoming_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Incoming::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Incoming::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Incoming>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .VehicleIncoming vehicles = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Incoming, _impl_.vehicles_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .VehicleIncoming vehicles = 1;
    {PROTOBUF_FIELD_OFFSET(Incoming, _impl_.vehicles_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::VehicleIncoming>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Incoming::Clear() {
// @@protoc_insertion_point(message_clear_start:Incoming)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vehicles_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Incoming::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Incoming& this_ = static_cast<const Incoming&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Incoming::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Incoming& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Incoming)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .VehicleIncoming vehicles = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_vehicles_size());
               i < n; i++) {
            const auto& repfield = this_._internal_vehicles().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Incoming)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Incoming::ByteSizeLong(const MessageLite& base) {
          const Incoming& this_ = static_cast<const Incoming&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Incoming::ByteSizeLong() const {
          const Incoming& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Incoming)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .VehicleIncoming vehicles = 1;
             {
              total_size += 1UL * this_._internal_vehicles_size();
              for (const auto& msg : this_._internal_vehicles()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Incoming::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Incoming*>(&to_msg);
  auto& from = static_cast<const Incoming&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Incoming)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vehicles()->MergeFrom(
      from._internal_vehicles());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Incoming::CopyFrom(const Incoming& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Incoming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Incoming::InternalSwap(Incoming* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.vehicles_.InternalSwap(&other->_impl_.vehicles_);
}

::google::protobuf::Metadata Incoming::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_protobuf_2fExampleIncoming_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
